"""add paylips table for employee payment recepits

Revision ID: 46edf5b6ac9f
Revises: a4ef8006f0d4
Create Date: 2025-06-26 09:33:14.351281

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '46edf5b6ac9f'
down_revision: Union[str, None] = 'a4ef8006f0d4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('departments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('departments', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_departments_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_departments_name'), ['name'], unique=True)

    op.create_table('exchange_rates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('from_currency', sa.Enum('VES', 'USD', 'EUR', name='currency'), nullable=False),
    sa.Column('to_currency', sa.Enum('VES', 'USD', 'EUR', name='currency'), nullable=False),
    sa.Column('rate', sa.Float(), nullable=False, comment='Tasa de cambio (ej. Cuántos VES son 1 USD/EUR)'),
    sa.Column('rate_date', sa.Date(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('from_currency', 'to_currency', 'rate_date', name='uq_exchange_rate_per_day')
    )
    with op.batch_alter_table('exchange_rates', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_exchange_rates_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_exchange_rates_rate_date'), ['rate_date'], unique=False)

    op.create_table('expense_categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('expense_categories', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_expense_categories_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_expense_categories_name'), ['name'], unique=True)

    op.create_table('grade_levels',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False, comment='Ej: Maternal, 1er Grado'),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('order_index', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('grade_levels', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_grade_levels_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_grade_levels_name'), ['name'], unique=True)

    op.create_table('representatives',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('cedula', sa.String(), nullable=False),
    sa.Column('rif', sa.String(length=20), nullable=True, comment='RIF del representante para facturación'),
    sa.Column('available_credit_ves', sa.Float(), nullable=False, comment='Saldo a favor explícito del representante en VES'),
    sa.Column('phone_main', sa.String(), nullable=False),
    sa.Column('phone_secondary', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('sex', sa.String(), nullable=True),
    sa.Column('profession', sa.String(), nullable=True),
    sa.Column('workplace', sa.String(), nullable=True),
    sa.Column('photo_url', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('representatives', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_representatives_cedula'), ['cedula'], unique=True)
        batch_op.create_index(batch_op.f('ix_representatives_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_representatives_first_name'), ['first_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_representatives_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_representatives_last_name'), ['last_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_representatives_rif'), ['rif'], unique=True)

    op.create_table('salary_component_definitions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('component_type', sa.Enum('EARNING', 'DEDUCTION', name='salarycomponenttype'), nullable=False),
    sa.Column('calculation_type', sa.Enum('FIXED_AMOUNT', 'PERCENTAGE_OF_BASE_SALARY', name='salarycomponentcalculationtype'), nullable=False),
    sa.Column('default_value', sa.Float(), nullable=True),
    sa.Column('default_currency', sa.Enum('VES', 'USD', 'EUR', name='currency'), nullable=True),
    sa.Column('is_taxable', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    with op.batch_alter_table('salary_component_definitions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_salary_component_definitions_id'), ['id'], unique=False)

    op.create_table('school_configurations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('school_name', sa.String(length=255), nullable=False),
    sa.Column('school_rif', sa.String(length=20), nullable=False),
    sa.Column('school_address', sa.Text(), nullable=True),
    sa.Column('school_phone', sa.String(length=50), nullable=True),
    sa.Column('billing_email', sa.String(length=255), nullable=True),
    sa.Column('current_period_name', sa.String(length=100), nullable=True, comment='Ej: Año Escolar 2024-2025'),
    sa.Column('current_period_start_date', sa.Date(), nullable=True),
    sa.Column('current_period_end_date', sa.Date(), nullable=True),
    sa.Column('payment_due_day', sa.Integer(), nullable=True, comment='Día del mes para vencimiento (1-28)'),
    sa.Column('internal_invoice_reference_prefix', sa.String(length=20), nullable=True, comment="Prefijo para el número de factura (ej: 'FAC-', '00-')"),
    sa.Column('next_internal_invoice_reference', sa.Integer(), nullable=False, comment='Siguiente número de factura a utilizar'),
    sa.Column('default_iva_percentage', sa.Float(), nullable=True, comment='Porcentaje de IVA por defecto (ej: 0.16 para 16%)'),
    sa.Column('document_logo_url', sa.String(length=500), nullable=True, comment='URL del logo para usar en documentos generados'),
    sa.Column('invoice_terms_and_conditions', sa.Text(), nullable=True, comment='Términos y condiciones para facturas y otros documentos'),
    sa.Column('credit_note_reference_prefix', sa.String(length=20), nullable=True, comment="Prefijo para Notas de Crédito (ej: 'NC-')"),
    sa.Column('next_credit_note_reference', sa.Integer(), nullable=False, comment='Siguiente número de Nota de Crédito a utilizar'),
    sa.Column('imprenta_digital_api_key', sa.String(length=255), nullable=True),
    sa.Column('imprenta_digital_api_token', sa.String(length=255), nullable=True),
    sa.Column('imprenta_digital_api_url', sa.String(length=500), nullable=True),
    sa.Column('fiscal_printer_port', sa.String(length=100), nullable=True, comment='Ej: COM1, /dev/ttyS0'),
    sa.Column('fiscal_printer_brand', sa.Enum('EPSON', 'BIXOLON', 'OTHER', name='fiscalprinterbrand'), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('school_rif')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_id'), ['id'], unique=False)

    op.create_table('charge_concepts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('default_amount', sa.Float(), nullable=False),
    sa.Column('default_amount_currency', sa.Enum('VES', 'USD', 'EUR', name='currency'), nullable=False),
    sa.Column('is_amount_fixed', sa.Boolean(), nullable=True),
    sa.Column('default_frequency', sa.Enum('MENSUAL', 'QUINCENAL', 'ANUAL', 'UNICO', 'OTRO', name='chargefrequency'), nullable=False),
    sa.Column('category', sa.Enum('MENSUALIDAD', 'INSCRIPCION', 'SERVICIO_RECURRENTE', 'CARGO_UNICO', 'PRODUCTO', 'OTRO', name='chargecategory'), nullable=False),
    sa.Column('iva_percentage', sa.Float(), nullable=False, comment='Porcentaje de IVA (ej: 0.16)'),
    sa.Column('applicable_grade_level_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['applicable_grade_level_id'], ['grade_levels.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('charge_concepts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_charge_concepts_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_charge_concepts_name'), ['name'], unique=True)

    op.create_table('invoices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('invoice_number', sa.String(length=50), nullable=False, comment='Correlativo interno del sistema (ej. FACT-0001)'),
    sa.Column('status', sa.Enum('PENDING_EMISSION', 'EMITTED', 'ANNULLED', 'ERROR', name='invoicestatus'), nullable=False),
    sa.Column('issue_date', sa.Date(), nullable=False),
    sa.Column('representative_id', sa.Integer(), nullable=False),
    sa.Column('subtotal_ves', sa.Float(), nullable=False),
    sa.Column('total_iva_ves', sa.Float(), nullable=False),
    sa.Column('total_amount_ves', sa.Float(), nullable=False),
    sa.Column('school_name_snapshot', sa.String(length=255), nullable=False),
    sa.Column('school_rif_snapshot', sa.String(length=20), nullable=False),
    sa.Column('school_address_snapshot', sa.Text(), nullable=True),
    sa.Column('school_phone_snapshot', sa.String(length=50), nullable=True),
    sa.Column('representative_name_snapshot', sa.String(length=200), nullable=False),
    sa.Column('representative_rif_or_cedula_snapshot', sa.String(length=20), nullable=False),
    sa.Column('representative_address_snapshot', sa.Text(), nullable=True),
    sa.Column('emission_type', sa.Enum('FISCAL_PRINTER', 'DIGITAL', 'FORMA_LIBRE', name='emissiontype'), nullable=True),
    sa.Column('fiscal_machine_serial', sa.String(length=100), nullable=True),
    sa.Column('fiscal_invoice_number', sa.String(length=50), nullable=True),
    sa.Column('fiscal_control_number', sa.String(length=50), nullable=True),
    sa.Column('digital_invoice_url', sa.String(length=500), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['representative_id'], ['representatives.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('invoices', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_invoices_fiscal_control_number'), ['fiscal_control_number'], unique=True)
        batch_op.create_index(batch_op.f('ix_invoices_fiscal_invoice_number'), ['fiscal_invoice_number'], unique=True)
        batch_op.create_index(batch_op.f('ix_invoices_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_invoices_invoice_number'), ['invoice_number'], unique=True)
        batch_op.create_index(batch_op.f('ix_invoices_issue_date'), ['issue_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_invoices_representative_id'), ['representative_id'], unique=False)

    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('representative_id', sa.Integer(), nullable=False),
    sa.Column('payment_date', sa.Date(), nullable=False),
    sa.Column('amount_paid', sa.Float(), nullable=False),
    sa.Column('currency_paid', sa.Enum('VES', 'USD', 'EUR', name='currency'), nullable=False),
    sa.Column('exchange_rate_applied', sa.Float(), nullable=True),
    sa.Column('amount_paid_ves_equivalent', sa.Float(), nullable=False),
    sa.Column('payment_method', sa.String(length=100), nullable=True),
    sa.Column('reference_number', sa.String(length=255), nullable=True),
    sa.Column('receipt_image_url', sa.String(length=500), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['representative_id'], ['representatives.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('payments', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_payments_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_payments_payment_date'), ['payment_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_payments_representative_id'), ['representative_id'], unique=False)

    op.create_table('payroll_runs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('period_start_date', sa.Date(), nullable=False),
    sa.Column('period_end_date', sa.Date(), nullable=False),
    sa.Column('pay_frequency_covered', sa.Enum('MONTHLY', 'FORTNIGHTLY', 'HOURLY', name='employeepayfrequency'), nullable=False),
    sa.Column('exchange_rate_usd_ves', sa.Float(), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'CONFIRMED', 'PAID_OUT', 'CANCELLED', name='payrollrunstatus'), nullable=False),
    sa.Column('processing_notes', sa.Text(), nullable=True),
    sa.Column('processed_by_user_id', sa.Integer(), nullable=True),
    sa.Column('processed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['processed_by_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('payroll_runs', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_payroll_runs_id'), ['id'], unique=False)

    op.create_table('positions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('department_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('positions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_positions_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_positions_name'), ['name'], unique=True)

    op.create_table('students',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('cedula', sa.String(), nullable=True),
    sa.Column('birth_date', sa.Date(), nullable=True),
    sa.Column('sex', sa.String(), nullable=True),
    sa.Column('grade_level_id', sa.Integer(), nullable=False),
    sa.Column('blood_type', sa.String(), nullable=True),
    sa.Column('allergies', sa.String(), nullable=True),
    sa.Column('emergency_contact_name', sa.String(), nullable=True),
    sa.Column('emergency_contact_phone', sa.String(), nullable=True),
    sa.Column('is_special_case', sa.Boolean(), nullable=True),
    sa.Column('special_case_description', sa.String(), nullable=True),
    sa.Column('photo_url', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('representative_id', sa.Integer(), nullable=False),
    sa.Column('has_scholarship', sa.Boolean(), nullable=True),
    sa.Column('scholarship_percentage', sa.Float(), nullable=True),
    sa.Column('scholarship_fixed_amount', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['grade_level_id'], ['grade_levels.id'], ),
    sa.ForeignKeyConstraint(['representative_id'], ['representatives.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('students', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_students_cedula'), ['cedula'], unique=True)
        batch_op.create_index(batch_op.f('ix_students_first_name'), ['first_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_students_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_students_last_name'), ['last_name'], unique=False)

    op.create_table('suppliers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('rif_ci', sa.String(length=20), nullable=True),
    sa.Column('contact_person', sa.String(length=150), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('phone', sa.String(length=50), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['expense_categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('suppliers', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_suppliers_category_id'), ['category_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_suppliers_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_suppliers_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_suppliers_name'), ['name'], unique=True)
        batch_op.create_index(batch_op.f('ix_suppliers_rif_ci'), ['rif_ci'], unique=True)

    op.create_table('applied_charges',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('charge_concept_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('original_concept_amount', sa.Float(), nullable=False),
    sa.Column('original_concept_currency', sa.Enum('VES', 'USD', 'EUR', name='currency'), nullable=False),
    sa.Column('amount_due_original_currency', sa.Float(), nullable=False),
    sa.Column('amount_paid_original_currency_equivalent', sa.Float(), nullable=False),
    sa.Column('is_indexed', sa.Boolean(), nullable=False),
    sa.Column('amount_due_ves_at_emission', sa.Float(), nullable=False),
    sa.Column('amount_paid_ves', sa.Float(), nullable=False),
    sa.Column('exchange_rate_applied_at_emission', sa.Float(), nullable=True),
    sa.Column('issue_date', sa.Date(), nullable=False),
    sa.Column('due_date', sa.Date(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'PAID', 'PARTIALLY_PAID', 'OVERDUE', 'CANCELLED', name='appliedchargestatus'), nullable=False),
    sa.Column('invoice_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['charge_concept_id'], ['charge_concepts.id'], ),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('applied_charges', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_applied_charges_charge_concept_id'), ['charge_concept_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_applied_charges_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_applied_charges_invoice_id'), ['invoice_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_applied_charges_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_applied_charges_student_id'), ['student_id'], unique=False)

    op.create_table('credit_notes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('credit_note_number', sa.String(length=50), nullable=False, comment='Correlativo interno de la Nota de Crédito'),
    sa.Column('issue_date', sa.Date(), nullable=False),
    sa.Column('reason', sa.Text(), nullable=False, comment='Motivo de la emisión de la nota de crédito'),
    sa.Column('representative_id', sa.Integer(), nullable=False),
    sa.Column('original_invoice_id', sa.Integer(), nullable=False),
    sa.Column('total_credited_ves', sa.Float(), nullable=False),
    sa.Column('school_rif_snapshot', sa.String(length=20), nullable=False),
    sa.Column('representative_rif_or_cedula_snapshot', sa.String(length=20), nullable=False),
    sa.Column('original_invoice_number_snapshot', sa.String(length=50), nullable=False),
    sa.Column('original_invoice_control_number_snapshot', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['original_invoice_id'], ['invoices.id'], ),
    sa.ForeignKeyConstraint(['representative_id'], ['representatives.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('original_invoice_id')
    )
    with op.batch_alter_table('credit_notes', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_credit_notes_credit_note_number'), ['credit_note_number'], unique=True)
        batch_op.create_index(batch_op.f('ix_credit_notes_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_credit_notes_issue_date'), ['issue_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_credit_notes_representative_id'), ['representative_id'], unique=False)

    op.create_table('employees',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=150), nullable=False),
    sa.Column('last_name', sa.String(length=150), nullable=False),
    sa.Column('identity_document', sa.String(length=50), nullable=False),
    sa.Column('birth_date', sa.Date(), nullable=True),
    sa.Column('gender', sa.String(length=20), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('primary_phone', sa.String(length=30), nullable=False),
    sa.Column('secondary_phone', sa.String(length=30), nullable=True),
    sa.Column('personal_email', sa.String(length=255), nullable=True),
    sa.Column('emergency_contact_name', sa.String(length=150), nullable=True),
    sa.Column('emergency_contact_phone', sa.String(length=30), nullable=True),
    sa.Column('emergency_contact_relationship', sa.String(length=50), nullable=True),
    sa.Column('employee_code', sa.String(length=50), nullable=True),
    sa.Column('position_id', sa.Integer(), nullable=False),
    sa.Column('hire_date', sa.Date(), nullable=False),
    sa.Column('termination_date', sa.Date(), nullable=True),
    sa.Column('contract_type', sa.Enum('FULL_TIME', 'PART_TIME', 'HOURLY', 'INTERNSHIP', 'TEMPORARY', 'INDEFINITE', 'OTHER', name='employeecontracttype'), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('photo_url', sa.String(length=500), nullable=True),
    sa.Column('additional_notes', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('base_salary_amount', sa.Float(), nullable=True),
    sa.Column('base_salary_currency', sa.Enum('VES', 'USD', 'EUR', name='currency'), nullable=True),
    sa.Column('pay_frequency', sa.Enum('MONTHLY', 'FORTNIGHTLY', 'HOURLY', name='employeepayfrequency'), nullable=True),
    sa.Column('hourly_rate', sa.Float(), nullable=True),
    sa.Column('accumulated_hours', sa.Float(), nullable=True),
    sa.Column('current_balance_ves', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['position_id'], ['positions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    with op.batch_alter_table('employees', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_employees_employee_code'), ['employee_code'], unique=True)
        batch_op.create_index(batch_op.f('ix_employees_first_name'), ['first_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_employees_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_employees_identity_document'), ['identity_document'], unique=True)
        batch_op.create_index(batch_op.f('ix_employees_last_name'), ['last_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_employees_personal_email'), ['personal_email'], unique=True)

    op.create_table('expenses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('expense_date', sa.Date(), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=False),
    sa.Column('supplier_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('currency', sa.Enum('VES', 'USD', 'EUR', name='currency'), nullable=False),
    sa.Column('amount_ves_equivalent_at_creation', sa.Float(), nullable=True),
    sa.Column('exchange_rate_at_creation', sa.Float(), nullable=True),
    sa.Column('payment_status', sa.Enum('PENDING', 'PAID', 'PARTIALLY_PAID', 'CANCELLED', name='expensepaymentstatus'), nullable=False),
    sa.Column('total_amount_paid_ves', sa.Float(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('invoice_document_url', sa.String(length=500), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['expense_categories.id'], ),
    sa.ForeignKeyConstraint(['supplier_id'], ['suppliers.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('expenses', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_expenses_category_id'), ['category_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_expenses_expense_date'), ['expense_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_expenses_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_expenses_payment_status'), ['payment_status'], unique=False)
        batch_op.create_index(batch_op.f('ix_expenses_supplier_id'), ['supplier_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_expenses_user_id'), ['user_id'], unique=False)

    op.create_table('credit_note_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('credit_note_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('unit_price_ves', sa.Float(), nullable=False),
    sa.Column('item_subtotal_ves', sa.Float(), nullable=False),
    sa.Column('item_iva_ves', sa.Float(), nullable=False),
    sa.Column('item_total_ves', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['credit_note_id'], ['credit_notes.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('credit_note_items', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_credit_note_items_id'), ['id'], unique=False)

    op.create_table('employee_balance_adjustments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('adjustment_date', sa.Date(), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=False),
    sa.Column('adjustment_type', sa.Enum('EARNING', 'DEDUCTION', name='employeebalanceadjustmenttype'), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('currency', sa.Enum('VES', 'USD', 'EUR', name='currency'), nullable=False),
    sa.Column('exchange_rate_usd_ves', sa.Float(), nullable=True),
    sa.Column('amount_ves', sa.Float(), nullable=False),
    sa.Column('created_by_user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('employee_balance_adjustments', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_employee_balance_adjustments_id'), ['id'], unique=False)

    op.create_table('employee_payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('payment_date', sa.Date(), nullable=False),
    sa.Column('amount_paid_ves', sa.Float(), nullable=False),
    sa.Column('payment_method', sa.String(length=100), nullable=True),
    sa.Column('reference_number', sa.String(length=255), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_by_user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('employee_payments', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_employee_payments_id'), ['id'], unique=False)

    op.create_table('employee_salary_components',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('component_definition_id', sa.Integer(), nullable=False),
    sa.Column('override_value', sa.Float(), nullable=True),
    sa.Column('override_currency', sa.Enum('VES', 'USD', 'EUR', name='currency'), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['component_definition_id'], ['salary_component_definitions.id'], ),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('employee_id', 'component_definition_id', name='uq_employee_component')
    )
    with op.batch_alter_table('employee_salary_components', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_employee_salary_components_id'), ['id'], unique=False)

    op.create_table('expense_payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('expense_id', sa.Integer(), nullable=False),
    sa.Column('payment_date', sa.Date(), nullable=False),
    sa.Column('amount_paid', sa.Float(), nullable=False),
    sa.Column('currency_paid', sa.Enum('VES', 'USD', 'EUR', name='currency'), nullable=False),
    sa.Column('amount_paid_ves_equivalent', sa.Float(), nullable=False),
    sa.Column('exchange_rate_applied_at_payment', sa.Float(), nullable=True),
    sa.Column('payment_method_used', sa.String(length=150), nullable=False),
    sa.Column('reference_number', sa.String(length=255), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['expense_id'], ['expenses.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('expense_payments', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_expense_payments_expense_id'), ['expense_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_expense_payments_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_expense_payments_payment_date'), ['payment_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_expense_payments_user_id'), ['user_id'], unique=False)

    op.create_table('invoice_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('invoice_id', sa.Integer(), nullable=False),
    sa.Column('applied_charge_id', sa.Integer(), nullable=True, comment='Vínculo al cargo original'),
    sa.Column('description', sa.String(length=500), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('unit_price_ves', sa.Float(), nullable=False),
    sa.Column('iva_percentage', sa.Float(), nullable=False),
    sa.Column('item_subtotal_ves', sa.Float(), nullable=False),
    sa.Column('item_iva_ves', sa.Float(), nullable=False),
    sa.Column('item_total_ves', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['applied_charge_id'], ['applied_charges.id'], ),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('invoice_items', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_invoice_items_id'), ['id'], unique=False)

    op.create_table('payment_allocations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('payment_id', sa.Integer(), nullable=False),
    sa.Column('applied_charge_id', sa.Integer(), nullable=False),
    sa.Column('amount_allocated_ves', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['applied_charge_id'], ['applied_charges.id'], ),
    sa.ForeignKeyConstraint(['payment_id'], ['payments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('payment_allocations', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_payment_allocations_id'), ['id'], unique=False)

    op.create_table('payroll_run_employee_details',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('payroll_run_id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('base_salary_amount_period_ves', sa.Float(), nullable=False),
    sa.Column('total_earnings_ves', sa.Float(), nullable=False),
    sa.Column('total_deductions_ves', sa.Float(), nullable=False),
    sa.Column('net_amount_to_pay_ves', sa.Float(), nullable=False),
    sa.Column('applied_components_details_json', sa.Text(), nullable=True),
    sa.Column('accumulated_hours_processed', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.ForeignKeyConstraint(['payroll_run_id'], ['payroll_runs.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('payroll_run_id', 'employee_id', name='uq_payroll_run_employee')
    )
    with op.batch_alter_table('payroll_run_employee_details', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_payroll_run_employee_details_id'), ['id'], unique=False)

    op.create_table('payslips',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_payment_id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('employee_full_name_snapshot', sa.String(), nullable=False),
    sa.Column('employee_identity_document_snapshot', sa.String(), nullable=False),
    sa.Column('employee_position_snapshot', sa.String(), nullable=True),
    sa.Column('employee_department_snapshot', sa.String(), nullable=True),
    sa.Column('school_name_snapshot', sa.String(), nullable=False),
    sa.Column('school_rif_snapshot', sa.String(), nullable=False),
    sa.Column('payment_date_snapshot', sa.Date(), nullable=False),
    sa.Column('period_start_date', sa.Date(), nullable=True),
    sa.Column('period_end_date', sa.Date(), nullable=True),
    sa.Column('total_earnings_ves', sa.Float(), nullable=False),
    sa.Column('total_deductions_ves', sa.Float(), nullable=False),
    sa.Column('net_pay_ves', sa.Float(), nullable=False),
    sa.Column('payment_breakdown_json', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.ForeignKeyConstraint(['employee_payment_id'], ['employee_payments.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('employee_payment_id')
    )
    with op.batch_alter_table('payslips', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_payslips_id'), ['id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('payslips', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_payslips_id'))

    op.drop_table('payslips')
    with op.batch_alter_table('payroll_run_employee_details', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_payroll_run_employee_details_id'))

    op.drop_table('payroll_run_employee_details')
    with op.batch_alter_table('payment_allocations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_payment_allocations_id'))

    op.drop_table('payment_allocations')
    with op.batch_alter_table('invoice_items', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_invoice_items_id'))

    op.drop_table('invoice_items')
    with op.batch_alter_table('expense_payments', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_expense_payments_user_id'))
        batch_op.drop_index(batch_op.f('ix_expense_payments_payment_date'))
        batch_op.drop_index(batch_op.f('ix_expense_payments_id'))
        batch_op.drop_index(batch_op.f('ix_expense_payments_expense_id'))

    op.drop_table('expense_payments')
    with op.batch_alter_table('employee_salary_components', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_employee_salary_components_id'))

    op.drop_table('employee_salary_components')
    with op.batch_alter_table('employee_payments', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_employee_payments_id'))

    op.drop_table('employee_payments')
    with op.batch_alter_table('employee_balance_adjustments', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_employee_balance_adjustments_id'))

    op.drop_table('employee_balance_adjustments')
    with op.batch_alter_table('credit_note_items', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_credit_note_items_id'))

    op.drop_table('credit_note_items')
    with op.batch_alter_table('expenses', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_expenses_user_id'))
        batch_op.drop_index(batch_op.f('ix_expenses_supplier_id'))
        batch_op.drop_index(batch_op.f('ix_expenses_payment_status'))
        batch_op.drop_index(batch_op.f('ix_expenses_id'))
        batch_op.drop_index(batch_op.f('ix_expenses_expense_date'))
        batch_op.drop_index(batch_op.f('ix_expenses_category_id'))

    op.drop_table('expenses')
    with op.batch_alter_table('employees', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_employees_personal_email'))
        batch_op.drop_index(batch_op.f('ix_employees_last_name'))
        batch_op.drop_index(batch_op.f('ix_employees_identity_document'))
        batch_op.drop_index(batch_op.f('ix_employees_id'))
        batch_op.drop_index(batch_op.f('ix_employees_first_name'))
        batch_op.drop_index(batch_op.f('ix_employees_employee_code'))

    op.drop_table('employees')
    with op.batch_alter_table('credit_notes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_credit_notes_representative_id'))
        batch_op.drop_index(batch_op.f('ix_credit_notes_issue_date'))
        batch_op.drop_index(batch_op.f('ix_credit_notes_id'))
        batch_op.drop_index(batch_op.f('ix_credit_notes_credit_note_number'))

    op.drop_table('credit_notes')
    with op.batch_alter_table('applied_charges', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_applied_charges_student_id'))
        batch_op.drop_index(batch_op.f('ix_applied_charges_status'))
        batch_op.drop_index(batch_op.f('ix_applied_charges_invoice_id'))
        batch_op.drop_index(batch_op.f('ix_applied_charges_id'))
        batch_op.drop_index(batch_op.f('ix_applied_charges_charge_concept_id'))

    op.drop_table('applied_charges')
    with op.batch_alter_table('suppliers', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_suppliers_rif_ci'))
        batch_op.drop_index(batch_op.f('ix_suppliers_name'))
        batch_op.drop_index(batch_op.f('ix_suppliers_id'))
        batch_op.drop_index(batch_op.f('ix_suppliers_email'))
        batch_op.drop_index(batch_op.f('ix_suppliers_category_id'))

    op.drop_table('suppliers')
    with op.batch_alter_table('students', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_students_last_name'))
        batch_op.drop_index(batch_op.f('ix_students_id'))
        batch_op.drop_index(batch_op.f('ix_students_first_name'))
        batch_op.drop_index(batch_op.f('ix_students_cedula'))

    op.drop_table('students')
    with op.batch_alter_table('positions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_positions_name'))
        batch_op.drop_index(batch_op.f('ix_positions_id'))

    op.drop_table('positions')
    with op.batch_alter_table('payroll_runs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_payroll_runs_id'))

    op.drop_table('payroll_runs')
    with op.batch_alter_table('payments', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_payments_representative_id'))
        batch_op.drop_index(batch_op.f('ix_payments_payment_date'))
        batch_op.drop_index(batch_op.f('ix_payments_id'))

    op.drop_table('payments')
    with op.batch_alter_table('invoices', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_invoices_representative_id'))
        batch_op.drop_index(batch_op.f('ix_invoices_issue_date'))
        batch_op.drop_index(batch_op.f('ix_invoices_invoice_number'))
        batch_op.drop_index(batch_op.f('ix_invoices_id'))
        batch_op.drop_index(batch_op.f('ix_invoices_fiscal_invoice_number'))
        batch_op.drop_index(batch_op.f('ix_invoices_fiscal_control_number'))

    op.drop_table('invoices')
    with op.batch_alter_table('charge_concepts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_charge_concepts_name'))
        batch_op.drop_index(batch_op.f('ix_charge_concepts_id'))

    op.drop_table('charge_concepts')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_id'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    op.drop_table('school_configurations')
    with op.batch_alter_table('salary_component_definitions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_salary_component_definitions_id'))

    op.drop_table('salary_component_definitions')
    with op.batch_alter_table('representatives', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_representatives_rif'))
        batch_op.drop_index(batch_op.f('ix_representatives_last_name'))
        batch_op.drop_index(batch_op.f('ix_representatives_id'))
        batch_op.drop_index(batch_op.f('ix_representatives_first_name'))
        batch_op.drop_index(batch_op.f('ix_representatives_email'))
        batch_op.drop_index(batch_op.f('ix_representatives_cedula'))

    op.drop_table('representatives')
    with op.batch_alter_table('grade_levels', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_grade_levels_name'))
        batch_op.drop_index(batch_op.f('ix_grade_levels_id'))

    op.drop_table('grade_levels')
    with op.batch_alter_table('expense_categories', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_expense_categories_name'))
        batch_op.drop_index(batch_op.f('ix_expense_categories_id'))

    op.drop_table('expense_categories')
    with op.batch_alter_table('exchange_rates', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_exchange_rates_rate_date'))
        batch_op.drop_index(batch_op.f('ix_exchange_rates_id'))

    op.drop_table('exchange_rates')
    with op.batch_alter_table('departments', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_departments_name'))
        batch_op.drop_index(batch_op.f('ix_departments_id'))

    op.drop_table('departments')
    # ### end Alembic commands ###
